// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String
  password  String
  role      Role     @default(CLIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

enum Role {
  ADMIN
  CLIENT
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String
  product     Product[]
}

model Product {
  id           String         @id @default(uuid())
  name         String
  price        Float
  discription  String?
  categoryId   String
  createdAt    DateTime       @default(now())
  category     Category       @relation(fields: [categoryId], references: [id])
  active       Boolean
  PrdouctImage PrdouctImage[]
  OrderItems   OrderItems[]
}

model PrdouctImage {
  id        String  @id @default(uuid())
  url       String
  publicUrl String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model OrderItems {
  id        String  @id @default(uuid())
  productId String
  subtotal  Float
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  Order     Order[]
}

enum Status {
  CANCELED
  SHIPPED
}

model Order {
  id         String     @id @default(uuid())
  userId     String
  totalAmout Float
  status     Status
  itemId     String
  createdAt  DateTime   @default(now())
  items      OrderItems @relation(fields: [itemId], references: [id])
}
